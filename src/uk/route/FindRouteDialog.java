/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package uk.route;

import java.util.ArrayList;

/**
 *
 * @author Ashutosh Pandey
 */
public class FindRouteDialog extends javax.swing.JDialog {

    /**
     * Creates new form FindRouteDialog
     */
    public FindRouteDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        loadCities();
        
        setSize(400,175);

        Utility.centerScreen(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbCityFrom = new javax.swing.JComboBox();
        btFindRoute = new javax.swing.JButton();
        btClose = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cmbCityTo = new javax.swing.JComboBox();
        lbmessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 175));
        setPreferredSize(new java.awt.Dimension(400, 175));
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setText("From");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 20, 50, 26);

        getContentPane().add(cmbCityFrom);
        cmbCityFrom.setBounds(70, 20, 150, 22);

        btFindRoute.setText("Find");
        btFindRoute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFindRouteActionPerformed(evt);
            }
        });
        getContentPane().add(btFindRoute);
        btFindRoute.setBounds(270, 20, 90, 25);

        btClose.setText("Close");
        btClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btClose);
        btClose.setBounds(270, 70, 90, 25);

        jLabel2.setText("To");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 70, 50, 26);

        getContentPane().add(cmbCityTo);
        cmbCityTo.setBounds(70, 70, 150, 22);
        getContentPane().add(lbmessage);
        lbmessage.setBounds(20, 110, 340, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCloseActionPerformed
        dispose();
    }//GEN-LAST:event_btCloseActionPerformed

    private void btFindRouteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFindRouteActionPerformed
        findRoute();
    }//GEN-LAST:event_btFindRouteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FindRouteDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FindRouteDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FindRouteDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FindRouteDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FindRouteDialog dialog = new FindRouteDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btClose;
    private javax.swing.JButton btFindRoute;
    private javax.swing.JComboBox cmbCityFrom;
    private javax.swing.JComboBox cmbCityTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lbmessage;
    // End of variables declaration//GEN-END:variables

    private void findRoute() {
        String from = cmbCityFrom.getSelectedItem().toString();
        String to = cmbCityTo.getSelectedItem().toString();
        
        ArrayList<CityRoute> routes = Utility.getPaths(from,to);
        
        ArrayList<CityRoute> shortestRoutes = null;
        
        if(routes!=null){
            
            shortestRoutes = new ArrayList<CityRoute>();
            
            String shortestVia = Utility.findShortestVia(from, to);
            
            for(CityRoute route : routes){
                
                if(route.getVia().equals(shortestVia)) {
                    shortestRoutes.add(route);
                }
            }
            
//            MainForm.myself.addRoute(shortestRoutes);
            MainForm.myself.addRoute(routes);
            
            MainForm.myself.drawRoute(routes);
        }
        else {
            lbmessage.setText("No route found...");
        }
    }

    private void loadCities() {

        ArrayList<String> cities = Utility.getCities();
        
        if(cities!=null){
            
            for(String city : cities){
                cmbCityFrom.addItem(city);
                cmbCityTo.addItem(city);
            }
        }        
    }
}
